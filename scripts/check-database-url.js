// Script para verificar se a DATABASE_URL est√° correta
console.log('üîç Verificando DATABASE_URL...');

// Verificar se a vari√°vel existe
if (!process.env.DATABASE_URL) {
  console.log('‚ùå DATABASE_URL n√£o est√° configurada');
  process.exit(1);
}

const dbUrl = process.env.DATABASE_URL;

// Verificar formato b√°sico
if (!dbUrl.startsWith('postgresql://')) {
  console.log('‚ùå DATABASE_URL deve come√ßar com "postgresql://"');
  process.exit(1);
}

// Extrair componentes da URL
try {
  const url = new URL(dbUrl);

  console.log('‚úÖ DATABASE_URL configurada');
  console.log('üìã Componentes da URL:');
  console.log(`   Protocolo: ${url.protocol}`);
  console.log(`   Host: ${url.hostname}`);
  console.log(`   Porta: ${url.port}`);
  console.log(`   Database: ${url.pathname.slice(1)}`);
  console.log(`   Usu√°rio: ${url.username}`);
  console.log(`   Senha: ${url.password ? '***configurada***' : '‚ùå n√£o configurada'}`);

  // Verificar se √© Supabase
  if (url.hostname.includes('supabase.co')) {
    console.log('‚úÖ URL parece ser do Supabase');

    // Verificar project ID
    const projectId = url.hostname.split('.')[1];
    console.log(`   Project ID: ${projectId}`);

    // Verificar se o project ID est√° correto
    if (projectId === 'bwitysxhadrcibputahk') {
      console.log('‚úÖ Project ID correto');
    } else {
      console.log('‚ö†Ô∏è  Project ID pode estar incorreto');
    }
  } else {
    console.log('‚ö†Ô∏è  URL n√£o parece ser do Supabase');
  }
} catch (error) {
  console.log('‚ùå Erro ao analisar DATABASE_URL:', error.message);
  process.exit(1);
}

console.log('\nüìù PR√ìXIMOS PASSOS:');
console.log('1. Verifique se o banco est√° online no Supabase');
console.log('2. Verifique se a senha est√° correta');
console.log('3. Teste a conex√£o localmente');
